---
title: Project Proposal - oVirt Engine Disaster Recovery (oVirt Engine DR)
category: project-proposal
authors: xandradx, dbinary, jandrad
wiki_category: Project proposal
wiki_title: Project Proposal - oVirt Engine Disaster Recovery (oVirt Engine DR)
wiki_revision_count: 1
wiki_last_updated: 2016-07-13
---

# Project Proposal - oVirt Engine Disaster Recovery (oVirt Engine DR)

## Summary

oVirt Engine DR is a web application, that uses Java + Ovirt API and currently PostgreSQL, MariaDB, to perform the task needed to recover from a Disaster Recovery.

## Owner and Initial Maintainers

Jose Eduardo Andrade Escobar <jandrad@chocomango.net>
Jorge Luis Andrade Escobar <jandrade@itm.gt>
Luis Armando Perez Marin <lperez@itm.gt>

## Current Status

*   This project is in [incubation](http://www.ovirt.org/governance/adding-a-subproject/).
*   Last updated: Jul 13 2016

oVirt Engine DR currently exists as an independent open source project hosted on [bitbucket](https://bitbucket.org/chocomango/ovirt-engine-disaster-recovery ). This wiki page will gather input on whether oVirt Engine DR should become an oVirt sub-project and (if so) how best to integrate it into the oVirt stack.

## oVirt Infrastructure

*   Bugzilla
*   Mailing list: devel

## Detailed Description

oVirt Engine DR, currenlty needs the Play Framework to run, it was built using this framework to speed up development.
It's a web application that store it's configuration data on a MariaDB database, and connects to oVirt API, to perform Disaster Revocery procedure, as

* Disabling Power Management for Hosts
* Manual Fencing Hosts
* Modifing 

**High-level work items:**

*   Integrate MOM and vdsm: MOM functionality is available automatically to vdsm
*   MOM APIs for vdsm: vdsm can control MOM behavior as needed (change policy, etc)
*   Enable statistics collection via the oVirt agent.

MOM is a written in python and should probably be packaged independently. Once vdsm starts using MOM, its package dependencies can be updated to reflect this. As for actual integration, I see two strategies:

*   MOM runs the way it does today -- as an independent host level daemon. vdsm will control the MOM policy using MOM's existing xmlrpc interface.
*   Alter MOM so that it can be loaded as a python module. vdsm would load the module and call a method to have mom start its own threads.

## License

Licensed under the Apache License, Version 2.0 (Apache-2.0) <http://www.apache.org/licenses/LICENSE-2.0>

## Benefit to oVirt

MOM will benefit oVirt by providing transparent tuning and optimization of nodes to achieve improved performance, more efficient resource utilization, and adaptability to changing workloads.

## Scope

MOM will have the most affect on VDSM and the oVirt guest agent. MOM will be started by and work in concert with vdsm. It will gather guest statistics by using an API to the guest agent. A small change would be needed to oVirt-node to ensure that MOM is an included package. Eventually, engine-core (and its APIs) could be extended to control MOM at the cluster and data center levels.

## Test Plan

*Not yet specified.*

## User Experience

The only user-visible change that should be evident is improved performance and better resource overcommitment.

## Dependencies

*   libvirt
*   Statistics collection mechanism in oVirt guest agent

## Contingency Plan

Dynamic management is a widely recognized requirement for a complete virtualization solution. If MOM does not become the accepted solution, then oVirt will need to adopt another project or directly add missing features to existing components.

## Documentation

MOM is documented [in the source](http://github.com/aglitke/mom/) and [in a wiki](http://github.com/aglitke/mom/wiki). See also: [These slides from KVM Forum 2010](http://www.linux-kvm.org/wiki/images/e/e8/2010-forum-litke-kvmforum2010.pdf) and [this developerWorks article](http://www.ibm.com/developerworks/linux/library/l-overcommit-kvm-resources/index.html).

## Release Notes

*Not yet provided.*

## Comments and Discussion

[Category:Project proposal](Category:Project proposal)
