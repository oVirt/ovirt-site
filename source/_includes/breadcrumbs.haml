:ruby
  url_depth = current_page.url.scan('/').size - 1

- if url_depth > 1
  - url_frag = current_page.url.split('/')

  %ul.breadcrumb
    - (1..url_depth).each do |url_index|
      - frag_link = url_frag[0..url_index].join('/') + '/'
      - matches_current_page = current_page.url == frag_link

      -# Find the page resource based on current_page or "compiled" path
      - if matches_current_page
        - frag_page = current_page
      - else
        - frag_page = sitemap.find_resource_by_path("#{frag_link}index.html")

      -# Provide a fallback based on the URL fragment
      - fallback_title = url_frag[url_index].capitalize

      -# Use the supplied title for the page or fallback to the URL fragment
      - if frag_page
        - frag_title = frag_page.data[:title] || fallback_title
      - else
        - frag_title = fallback_title

      -# Display the path, linking it, if applicable
      - if matches_current_page || frag_page.nil?
        %li.active= frag_title
      - else
        %li= link_to frag_title, frag_link
